"use strict";var precacheConfig=[["/portfolio/index.html","9aa0110af9a367288b275a26814a4b0b"],["/portfolio/static/css/main.c661937a.css","b0de0e86087b158f9deefdf9537534a9"],["/portfolio/static/js/main.e6341b9f.js","201d54e182bb03747d25b8655932c363"],["/portfolio/static/media/ScreenSketch2.91301c3e.jpg","91301c3e8933feb51b907b100432cbd7"],["/portfolio/static/media/bookworm-insights.82caded1.png","82caded12cbef290a4053d04d47a7abc"],["/portfolio/static/media/bookworm-modal.6c578d11.png","6c578d113730cfee2a589014303814b5"],["/portfolio/static/media/bookworm-persona.36e922c2.png","36e922c266bfe2534fbac6ecf1bb4fea"],["/portfolio/static/media/bookworm-present.5b607a34.jpg","5b607a344d093bea21c812b1c431d434"],["/portfolio/static/media/bookworm2.69225aa2.png","69225aa25842bf689f94880485d553b0"],["/portfolio/static/media/bookworm3.a3dc9fed.png","a3dc9fed2854c7cf48b6b3e28b27e7f4"],["/portfolio/static/media/confetti-headshot.fba1aeb6.jpg","fba1aeb6efedc681702becd3a44ce59d"],["/portfolio/static/media/do-prototype.8f844274.png","8f844274517709f61a63f36db9d8b974"],["/portfolio/static/media/do-styleguide.4228f0db.png","4228f0db1f6ee1c43ed7a25161cd05b9"],["/portfolio/static/media/do-team.4e41c7dd.png","4e41c7dddda00d55604bc28b895af45d"],["/portfolio/static/media/do-usability.c98d6020.png","c98d60204506c4b2b7ce0a81dbe826b6"],["/portfolio/static/media/do-user.ce003ae3.png","ce003ae33b36d44ae647510725b7a356"],["/portfolio/static/media/do-winnershot.e5114ca3.png","e5114ca368fa4e3b969c1d4f02011d63"],["/portfolio/static/media/mail-icon.6aa1c1e5.png","6aa1c1e5741c6d7fc65698f467670960"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var r="/portfolio/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});